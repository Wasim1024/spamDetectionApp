{"ast":null,"code":"var _jsxFileName = \"/Users/wasi/Desktop/spamDetectionApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!message.trim()) {\n      setError('Please enter a message to check');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setPrediction(null);\n    try {\n      const response = await fetch('http://localhost:8001/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: message\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get prediction');\n      }\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (err) {\n      setError('Error: Could not connect to the spam detection API. Make sure your FastAPI server is running on port 8001.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getResultDisplay = () => {\n    if (prediction === null) return null;\n    const isSpam = prediction === 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `result ${isSpam ? 'spam' : 'not-spam'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-icon\",\n        children: isSpam ? '🚫' : '✅'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: isSpam ? 'SPAM DETECTED' : 'NOT SPAM'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: isSpam ? 'This message appears to be spam.' : 'This message looks legitimate.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDEE1\\uFE0F Spam Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter a message to check if it's spam or legitimate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Message to Check:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"message\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Enter your message here... (e.g., 'Congratulations! You've won a prize!')\",\n            rows: \"4\",\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !message.trim(),\n          children: loading ? 'Checking...' : 'Check for Spam'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), getResultDisplay(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"examples\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Try these examples:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"example-btn\",\n            onClick: () => setMessage(\"Congratulations! You've won a $1000 gift card. Click here to claim now!\"),\n            children: \"Spam Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"example-btn\",\n            onClick: () => setMessage(\"Hi, how are you doing today? Let's meet for coffee sometime.\"),\n            children: \"Normal Example\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GXWmDfesx5YtnBewxPIue90eZkE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","prediction","setPrediction","loading","setLoading","error","setError","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","text","ok","Error","data","json","err","getResultDisplay","isSpam","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","placeholder","rows","disabled","type","onClick","_c","$RefreshReg$"],"sources":["/Users/wasi/Desktop/spamDetectionApp/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!message.trim()) {\n      setError('Please enter a message to check');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setPrediction(null);\n\n    try {\n      const response = await fetch('http://localhost:8001/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text: message }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get prediction');\n      }\n\n      const data = await response.json();\n      setPrediction(data.prediction);\n    } catch (err) {\n      setError('Error: Could not connect to the spam detection API. Make sure your FastAPI server is running on port 8001.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getResultDisplay = () => {\n    if (prediction === null) return null;\n    \n    const isSpam = prediction === 1;\n    return (\n      <div className={`result ${isSpam ? 'spam' : 'not-spam'}`}>\n        <div className=\"result-icon\">\n          {isSpam ? '🚫' : '✅'}\n        </div>\n        <div className=\"result-text\">\n          <strong>{isSpam ? 'SPAM DETECTED' : 'NOT SPAM'}</strong>\n          <p>{isSpam ? 'This message appears to be spam.' : 'This message looks legitimate.'}</p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <header className=\"header\">\n          <h1>🛡️ Spam Detection</h1>\n          <p>Enter a message to check if it's spam or legitimate</p>\n        </header>\n\n        <form onSubmit={handleSubmit} className=\"form\">\n          <div className=\"input-group\">\n            <label htmlFor=\"message\">Message to Check:</label>\n            <textarea\n              id=\"message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              placeholder=\"Enter your message here... (e.g., 'Congratulations! You've won a prize!')\"\n              rows=\"4\"\n              disabled={loading}\n            />\n          </div>\n\n          <button type=\"submit\" disabled={loading || !message.trim()}>\n            {loading ? 'Checking...' : 'Check for Spam'}\n          </button>\n        </form>\n\n        {error && (\n          <div className=\"error\">\n            <span>⚠️</span>\n            {error}\n          </div>\n        )}\n\n        {getResultDisplay()}\n\n        <div className=\"examples\">\n          <h3>Try these examples:</h3>\n          <div className=\"example-buttons\">\n            <button \n              className=\"example-btn\"\n              onClick={() => setMessage(\"Congratulations! You've won a $1000 gift card. Click here to claim now!\")}\n            >\n              Spam Example\n            </button>\n            <button \n              className=\"example-btn\"\n              onClick={() => setMessage(\"Hi, how are you doing today? Let's meet for coffee sometime.\")}\n            >\n              Normal Example\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}